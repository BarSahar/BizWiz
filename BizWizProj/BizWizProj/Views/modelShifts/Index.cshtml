<script src="@Url.Content("~/Scripts/DayPilot/daypilot-all.min.js")" type="text/javascript"></script>
<br />
<br />
<br />
@Html.ActionLink("Create New shift", "Create")
<br />


<div style="float:left; width: 160px;">
    <div id="nav">
        <script type="text/javascript">
            var nav = new DayPilot.Navigator("nav");
            nav.showMonths = 3;
            nav.skipMonths = 3;
            nav.selectMode = "week";
            nav.init();
        </script>
    </div>
</div>
<div style="margin-left: 160px;">
    <div id="dp">
        @Html.ActionLink("Create New shift", "Create")

        @Html.DayPilotCalendar("dp", new DayPilot.Web.Mvc.DayPilotCalendarConfig
{
    
    BackendUrl = Url.Action("Backend", "modelShifts"),
    ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType.Week,
    EventDeleteHandling = DayPilot.Web.Mvc.Events.Calendar.EventDeleteHandlingType.CallBack,
    TimeFormat = DayPilot.Web.Mvc.Enums.TimeFormat.Clock24Hours,
    TimeRangeSelectedHandling = DayPilot.Web.Mvc.Events.Calendar.TimeRangeSelectedHandlingType.JavaScript,
    TimeRangeSelectedJavaScript = "create(start, end)"

})
    </div>
</div>

<script type="text/javascript">

    function create(start, end) {
        var m = new DayPilot.Modal();
        m.closed = function () {
            if (this.result == "OK") {
                dp.commandCallBack('refresh');
            }
            dp.clearSelection();
        };
        m.showUrl('@Url.Action("Create", "modelShifts")?start=' + start + '&end=' + end);
    }

</script>




@*@model IEnumerable<BizWizProj.Models.modelShift>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.dayIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.shiftIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.numOfEmployees)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Start)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.End)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.dayIndex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.shiftIndex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.numOfEmployees)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Start)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.End)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>*@